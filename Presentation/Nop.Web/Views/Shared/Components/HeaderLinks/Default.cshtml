@model HeaderLinksModel
@using Nop.Core.Domain.Customers
@using Nop.Web.Models.Common
@inject Nop.Core.IWebHelper webHelper

<div>
    <ul class="flex flex-row justify-center items-center">
        @await Component.InvokeAsync(typeof(WidgetViewComponent), new
            {
                widgetZone =
                 PublicWidgetZones.HeaderLinksBefore,
                additionalData = Model
            })
        @if (Model.IsAuthenticated)
        {
            <li>
                <a href="@Url.RouteUrl("CustomerInfo")" class="ico-account">
                    <i class="fa-solid fa-user"></i>
                </a>
            </li>
            <li>
                <a href="@Url.RouteUrl("Logout")" class="ico-logout">
                    <i class="fa-solid fa-sign-out-alt"></i>
                </a>
            </li>
        }
        else
        {
            var returnUrl = Context.Request.Query.TryGetValue("returnUrl", out var url) && !StringValues.IsNullOrEmpty(url)
            ? url.ToString()
            : webHelper.GetRawUrl(Context.Request);

            @if (Model.RegistrationType != UserRegistrationType.Disabled)
            {
                <!-- <li>
                    <a href="@Url.RouteUrl("Register", new { returnUrl })" class="ico-register">
                        <i class="fa-solid fa-user-plus"></i>
                    </a>
                </li> -->
            }
            <li>
                <a href="@Url.RouteUrl("Login", new { returnUrl })" class="ico-login">
                    <i class="fa-solid fa-sign-in-alt"></i>
                </a>
            </li>
        }
        @if (Model.AllowPrivateMessages)
        {
            <li>
                <a href="@Url.RouteUrl("PrivateMessages", new { tab = "" })" class="ico-inbox">
                    <i class="fa-solid fa-envelope"></i>
                    <span class="inbox-unread">@Model.UnreadPrivateMessages</span>
                </a>
            </li>
        }
        @if (Model.WishlistEnabled)
        {
            <li>
                <a href="@Url.RouteUrl("Wishlist")" class="ico-wishlist">
                    <i class="fa-solid fa-heart"></i>
                    <span class="wishlist-qty">@Model.WishlistItems</span>
                </a>
            </li>
        }
        @if (Model.ShoppingCartEnabled)
        {
            <li id="topcartlink relative">
                <a href="@Url.RouteUrl("ShoppingCart")" class="ico-cart">
                    <i class="fa-solid fa-shopping-bag"></i>
                    <span class="cart-qty">@Model.ShoppingCartItems</span>
                </a>
                <!-- <div class="absolute top-16 right-0 bg-dark border-white border w-44">
                    @await Component.InvokeAsync(typeof(FlyoutShoppingCartViewComponent));
                </div> -->
            </li>
        }
        @await Component.InvokeAsync(typeof(WidgetViewComponent), new
            {
                widgetZone = PublicWidgetZones.HeaderLinksAfter,
                additionalData = Model
            })
    </ul>
    @if (Model.AllowPrivateMessages && !string.IsNullOrEmpty(Model.AlertMessage))
    {
        <script asp-location="Footer">
            $(function () {
                displayPopupNotification('@Html.Raw(JavaScriptEncoder.Default.Encode(Model.AlertMessage))', 'success', false);
            });
        </script>
    }
    @if (Model.ShoppingCartEnabled)
    {
        <script asp-location="Footer">
            $(function () {
                $('.header').on('mouseenter', '#topcartlink', function () {
                    $('#flyout-cart').addClass('active');
                });
                $('.header').on('mouseleave', '#topcartlink', function () {
                    $('#flyout-cart').removeClass('active');
                });
                $('.header').on('mouseenter', '#flyout-cart', function () {
                    $('#flyout-cart').addClass('active');
                });
                $('.header').on('mouseleave', '#flyout-cart', function () {
                    $('#flyout-cart').removeClass('active');
                });
            });
        </script>
    }
</div>

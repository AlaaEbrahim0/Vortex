@model CategoryNavigationModel
@using Nop.Core.Domain.Catalog

@functions {
    bool BreadCrumbContainsCurrentCategoryId(CategorySimpleModel category)
    {
        if (Model.CurrentCategoryId == 0)
            return false;

        if (category.Id == Model.CurrentCategoryId)
            return true;

        foreach (var subCategory in category.SubCategories)
        {
            if (BreadCrumbContainsCurrentCategoryId(subCategory))
            {
                return true;
            }
        }

        return false;
    }

    async Task CategoryLine(CategoryNavigationModel.CategoryLineModel lineModel)
    {
        var active = lineModel.Category.Id == lineModel.CurrentCategoryId ||
        lineModel.Category.SubCategories.Count(BreadCrumbContainsCurrentCategoryId) > 0;
        var liClass = "block rounded-lg px-4 py-2 text-sm font-medium";
        liClass += active ? " text-gray-700 bg-gray-100" : " text-gray-500 hover:bg-gray-100 hover:text-gray-700";

        <li>
            <details class="group [&_summary::-webkit-details-marker]:hidden">
                <summary class="@liClass flex cursor-pointer items-center justify-between">
                    <a href="@(Url.RouteUrl<Category>(new { SeName = lineModel.Category.SeName }))" class="w-full block">
                        <span class="text-sm font-medium">@lineModel.Category.Name</span>
                    </a>
                    @if (lineModel.Category.SubCategories.Count > 0)
                    {
                        <span class="shrink-0 transition duration-300 group-open:-rotate-180">
                            <svg xmlns="http://www.w3.org/2000/svg" class="size-5" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd"
                                    d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
                                    clip-rule="evenodd" />
                            </svg>
                        </span>
                    }
                </summary>
                @if (lineModel.Category.SubCategories.Count > 0)
                {
                    <ul class="mt-2 space-y-1 px-4">
                        @foreach (var subCategory in lineModel.Category.SubCategories)
                        {
                            var categoryLineModel = new CategoryNavigationModel.CategoryLineModel
                    {
                        CurrentCategoryId = lineModel.CurrentCategoryId,
                        Category = subCategory
                    };
                            await CategoryLine(categoryLineModel);
                        }
                    </ul>
                }
            </details>
        </li>
    }
}

<div class="drawer-side z-50">
    <label for="my-drawer-3" aria-label="close sidebar" class="drawer-overlay"></label>
    <div class="flex h-screen flex-col justify-between border-e bg-black w-72">
        <div class="px-4 py-6">
            <span class="grid h-10 w-100 place-content-center rounded-lg text-xs text-gray-600">
                @await Component.InvokeAsync(typeof(LogoViewComponent))
            </span>

            <ul class="mt-6 space-y-1">
                <!-- Dynamic Categories -->
                @if (Model.Categories.Count > 0)
                {
                    @foreach (var category in Model.Categories)
                    {
                        var categoryLineModel = new CategoryNavigationModel.CategoryLineModel
                    {
                        CurrentCategoryId = Model.CurrentCategoryId,
                        Category = category
                    };
                        await CategoryLine(categoryLineModel);
                    }
                }
            </ul>
        </div>
    </div>
</div>

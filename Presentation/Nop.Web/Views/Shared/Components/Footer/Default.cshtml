@model FooterModel

@using Nop.Core
@using Nop.Core.Domain.Tax
@using Nop.Core.Domain.Topics
@using Nop.Web.Components

@inject IWorkContext workContext

<footer class="bg-black">
    <div class="mx-auto max-w-screen-xl px-4 pb-6 pt-16 sm:px-6 lg:px-8">
        
        <div class="mt-16 grid grid-cols-1 gap-4 border-t border-gray-100 pt-16 md:grid-cols-3">
            <div class="col-span-1 md:col-span-3">
                @await Component.InvokeAsync(typeof(NewsletterBoxViewComponent))

            </div>
            <div class="text-center sm:text-left">
                <p class="text-lg font-medium text-gray-400">@T("Footer.Information")</p>

                <ul class="mt-8 space-y-4 text-sm text-white">
                    @if (Model.SitemapEnabled && Model.DisplaySitemapFooterItem)
                    {
                        <li>
                            <a class="transition hover:text-gray-700/75"
                                href="@Url.RouteUrl("Sitemap")">@T("Sitemap")</a>
                        </li>
                    }
                    @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn1).ToList())
                    {
                        <li>
                            <a class=" transition hover:text-gray-700/75"
                                href="@(Url.RouteUrl<Topic>(new { SeName = topic.SeName }))">@topic.Name</a>
                        </li>
                    }
                    @if (Model.DisplayContactUsFooterItem)
                    {
                        <li>
                            <a class=" transition hover:text-gray-700/75"
                                href="@Url.RouteUrl("ContactUs")">@T("ContactUs")</a>
                        </li>
                    }
                </ul>
            </div>

            <div class="text-center sm:text-left">
                <p class="text-lg font-medium text-gray-400">@T("Footer.CustomerService")</p>

                <ul class="mt-8 space-y-4 text-sm text-white">
                    @if (Model.SearchEnabled && Model.DisplayProductSearchFooterItem)
                    {
                        <li>
                            <a class="transition hover:text-gray-700/75"
                                href="@Url.RouteUrl("ProductSearch")">@T("Search")</a>
                        </li>
                    }
                    @if (Model.NewsEnabled && Model.DisplayNewsFooterItem)
                    {
                        <li>
                            <a class=" transition hover:text-gray-700/75"
                                href="@Url.RouteUrl("NewsArchive")">@T("News")</a>
                        </li>
                    }
                    @if (Model.BlogEnabled && Model.DisplayBlogFooterItem)
                    {
                        <li>
                            <a class=" transition hover:text-gray-700/75"
                                href="@Url.RouteUrl("Blog")">@T("Blog")</a>
                        </li>
                    }
                    @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn2).ToList())
                    {
                        <li>
                            <a class=" transition hover:text-gray-700/75"
                                href="@(Url.RouteUrl<Topic>(new { SeName = topic.SeName }))">@topic.Name</a>
                        </li>
                    }
                </ul>
            </div>

            <div class="text-center sm:text-left">
                <p class="text-lg font-medium text-gray-400">@T("Footer.MyAccount")</p>

                <ul class="mt-8 space-y-4 text-sm text-white">
                    @if (Model.DisplayCustomerInfoFooterItem)
                    {
                        <li>
                            <a class=" transition hover:text-gray-700/75"
                                href="@Url.RouteUrl("CustomerInfo")">@T("Account.MyAccount")</a>
                        </li>
                    }
                    @if (Model.DisplayCustomerOrdersFooterItem)
                    {
                        <li>
                            <a class=" transition hover:text-gray-700/75"
                                href="@Url.RouteUrl("CustomerOrders")">@T("Account.CustomerOrders")</a>
                        </li>
                    }
                    @if (Model.DisplayCustomerAddressesFooterItem)
                    {
                        <li>
                            <a class=" transition hover:text-gray-700/75"
                                href="@Url.RouteUrl("CustomerAddresses")">@T("Account.CustomerAddresses")</a>
                        </li>
                    }
                    @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn3).ToList())
                    {
                        <li>
                            <a class=" transition hover:text-gray-700/75"
                                href="@(Url.RouteUrl<Topic>(new { SeName = topic.SeName }))">@topic.Name</a>
                        </li>
                    }
                </ul>
            </div>

            @* <div class="text-center sm:text-left">
            <p class="text-lg font-medium text-gray-400">@T("Footer.FollowUs")</p>

            <div class="mt-8 space-y-4 text-sm">
            @await Component.InvokeAsync(typeof(SocialButtonsViewComponent))

            </div>
            </div> *@
        </div>
        @await Component.InvokeAsync(typeof(SocialButtonsViewComponent));


        <div class="border-t border-gray-100 pt-6 sm:flex sm:items-center sm:justify-between">
            <p class="text-center text-sm text-gray-500 sm:text-left">
                @T("Content.CopyrightNotice", DateTime.Now.Year, Model.StoreName)
            </p>

            @if (!Model.HidePoweredByNopCommerce)
            {
                <p class="mt-4 text-center text-sm text-gray-500 sm:mt-0 sm:text-right">
                    Powered by <a href="@(OfficialSite.Main)" target="_blank" @(Model.IsHomePage ? string.Empty :
                    "rel=nofollow") class="text-teal-600 hover:text-teal-600/75">nopCommerce</a>
                </p>
            }
        </div>
    </div>


    @await Component.InvokeAsync(typeof(WidgetViewComponent), new
        {
            widgetZone = PublicWidgetZones.Footer,
            additionalData = Model
        })
</footer>

<script asp-location="Footer">
    $(function () {
        $('.footer-block .title').on('click', function () {
            var e = window, a = 'inner';
            if (!('innerWidth' in window)) {
                a = 'client';
                e = document.documentElement || document.body;
            }
            var result = { width: e[a + 'Width'], height: e[a + 'Height'] };
            if (result.width < 769) {
                $(this).siblings('.list').slideToggle('slow');
            }
        });
    });
</script>
<script asp-location="Footer">
    $(function () {
        $('.block .title').on('click', function () {
            var e = window, a = 'inner';
            if (!('innerWidth' in window)) {
                a = 'client';
                e = document.documentElement || document.body;
            }
            var result = { width: e[a + 'Width'], height: e[a + 'Height'] };
            if (result.width < 1001) {
                $(this).siblings('.listbox').slideToggle('slow');
            }
        });
    });
</script>